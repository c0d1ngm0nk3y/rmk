#!/usr/bin/env ruby
require_relative '../lib/rmk.rb'
require_relative '../lib/ui.rb'

controller = Rmk::Controller.new()
ui = false
build_interval = 60

OptionParser.new do |opts|
  opts.banner = "Usage: rmk.rb [options] [target]"

  opts.on("-C", "--directory [directory]", "Change to directory ") do |v|
    controller.dir = v
  end
  opts.on("-r", "--readonly", "Raise exception when files are rebuild") do |v|
    controller.policy = Rmk::ModificationTimeBuildPolicy.new(true)
  end
  opts.on("-a", "--always", "build files unconditionally") do |v|
    controller.policy = Rmk::AlwaysBuildPolicy.new()
  end
  opts.on("-c", "--cache [url]", "use build cache ") do |v|
    controller.policy = Rmk::CacheBuildPolicy.new(v)
  end
  opts.on("-v", "--verbose", "verbose mode ") do |v|
    Rmk.verbose += 1
  end
  opts.on("-t", "--threads [N]", "allow N threads at parallel") do |v|
    Rmk::Job.threads = v.to_i
  end
  opts.on("-i", "--build-interval [seconds]", "Build interval for UI") do |v|
    build_interval = v.to_i
  end
  opts.on("-u", "--ui", "start web ui") do
    ui = true
  end
end.parse!

controller.task = ARGV[0] || controller.task

if ui
  Rmk::App.run(controller,build_interval)
else
  result = 0
  EventMachine.run do
    result = controller.run() do
      EventMachine.stop
    end
  end
  exit(result)
end